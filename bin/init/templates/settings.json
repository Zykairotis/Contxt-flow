{
  "env": {
    "API_TIMEOUT_MS": "3000000",
    "PATH": "/home/mewtwo/.nexus/bin:/home/mewtwo/.local/bin:/home/mewtwo/.npm-global/bin:/home/mewtwo/.npm-global/bin:/home/mewtwo/.bun/bin:/opt/miniconda3/condabin:/home/mewtwo/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/bin:/opt/cuda/bin:/opt/cuda/nsight_compute:/opt/cuda/nsight_systems/bin:/var/lib/flatpak/exports/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/mewtwo/.local/bin:/home/mewtwo/.local/bin"
  },
  "includeCoAuthoredBy": true,
  "permissions": {
    "allow": [
      "Bash(npx claude-flow :*)",
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(npm test :*)",
      "Bash(git status)",
      "Bash(git diff :*)",
      "Bash(git log :*)",
      "Bash(git add :*)",
      "Bash(git commit :*)",
      "Bash(git push)",
      "Bash(git config :*)",
      "Bash(git tag :*)",
      "Bash(git branch :*)",
      "Bash(git checkout :*)",
      "Bash(git stash :*)",
      "Bash(jq :*)",
      "Bash(node :*)",
      "Bash(which :*)",
      "Bash(pwd)",
      "Bash(ls :*)",
      "Bash(flock :*)"
    ],
    "deny": [
      "Bash(rm -rf /)",
      "Bash(sudo :*)",
      "Bash(curl | bash:*)",
      "Bash(wget | sh:*)",
      "Bash(eval :*)"
    ]
  },
  "enabledMcpjsonServers": [
    "claude-flow",
    "ruv-swarm"
  ],
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.command // empty' | tr '\\n' '\\0' | xargs -0 -I {} claude-flow hooks pre-command --command '{}' --validate-safety true --prepare-resources true"
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path // .tool_input.path // empty' | tr '\\n' '\\0' | xargs -0 -I {} claude-flow hooks pre-edit --file '{}' --auto-assign-agents true --load-context true"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.command // empty' | tr '\\n' '\\0' | xargs -0 -I {} sh -c 'flock -n /tmp/claude-flow-post.lock claude-flow hooks post-command --command \"{}\" --track-metrics true --store-results true &'"
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path // .tool_input.path // empty' | tr '\\n' '\\0' | xargs -0 -I {} claude-flow hooks post-edit --file '{}' --format true --update-memory true"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "matcher": "manual",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'ðŸ“„ PreCompact: Review CLAUDE.md for 54 agents, swarm coordination, SPARC methodology, GOLDEN RULE (1 msg = all ops)'"
          }
        ]
      },
      {
        "matcher": "auto",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'ðŸ“„ Auto-Compact (Context Full): 54 agents, concurrent patterns, batchtools, swarm coordination, GOLDEN RULE'"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "sh -c 'flock -n /tmp/claude-flow-stop.lock claude-flow hooks session-end --generate-summary true --persist-state true --export-metrics true &'"
          }
        ]
      }
    ]
  },
  "alwaysThinkingEnabled": false
}